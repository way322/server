// server/migrate.js
import pg from 'pg';
const { Client } = pg; // –ò—Å–ø–æ–ª—å–∑—É–µ–º Client –≤–º–µ—Å—Ç–æ Pool –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π
import { readFileSync } from 'fs';

const runMigrations = async () => {
  const client = new Client({
    connectionString: process.env.DATABASE_URL,
    ssl: { 
      rejectUnauthorized: false // –ë–µ–∑ require: true (Railway —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç SSL)
    }
  });

  try {
    await client.connect();
    console.log('üöÄ Starting migrations...');
    
    const sql = readFileSync('./schema.sql').toString();
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–ø–ª–∏—Ç —Å —É—á–µ—Ç–æ–º PL/pgSQL –±–ª–æ–∫–æ–≤
    const queries = sql.split(/;\s*?(?=CREATE|INSERT|ALTER|DROP|SELECT|DELETE|UPDATE)/i);
    
    for (const query of queries) {
      if (query.trim()) {
        await client.query(query);
        console.log(`‚úÖ Executed query: ${query.split(/\s+/).slice(0, 4).join(' ')}...`);
      }
    }
    
    console.log('üéâ All migrations completed successfully!');
  } catch (err) {
    console.error('‚ùå Migration failed:', err.message);
    process.exit(1);
  } finally {
    await client.end(); // –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  }
};

runMigrations();